language: android

sudo: required

jdk: oraclejdk8

env:
  global:
    - secure: "OVfIL3ggaGcDgJJhdWxYTCo3u38SNPNUNPsv6adHp5wW0Y2n1CF1zcAnZXhTkGEjoGvi0RuV8ZLG9jbmQdqxd17qBeBf2XPWKxyG1SUfegDVSy9OPF8BY11Fsp9I5RP1W3T/c32KTc7zvhtAivq9mbcrBYJZhDCKpZkdTNliFQ0="
    - API=25 # Android API level 25 by default
    - TAG=google_apis # Google APIs by default, alternatively use default
    - ABI=armeabi-v7a # ARM ABI v7a by default
    - QEMU_AUDIO_DRV=none # Disable emulator audio to avoid warning
    - GRADLE_USER_HOME="${TRAVIS_BUILD_DIR}/gradle" # Change location for Gradle Wrapper and cache
    - ANDROID_HOME=/usr/local/android-sdk-24.0.2 # Depends on the cookbooks version used in the VM
    - TOOLS=${ANDROID_HOME}/tools # PATH order matters, exists more than one emulator script
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
    - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)

android:
  components:
    - tools
    - build-tools-25.0.2
    - platform-tools
    - tools
    - android-25
    - extra-google-m2repository
    - extra-android-m2repository

matrix:
  include: # More Emulator API levels to build in parallel
    - env: API=25
    - env: API=24
    - env: API=23
    - env: API=22
    - env: API=19
  allow_failures:
    - env: API=23
    - env: API=22
  fast_finish: false

before_install:
  - export EMULATOR="system-images;android-${API};${TAG};${ABI}" # Used to install/create emulator
  - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid warning
  - if [ -n "$encrypted_49e3b92debd1_key" ]; then openssl aes-256-cbc -K $encrypted_49e3b92debd1_key -iv $encrypted_49e3b92debd1_iv -in secrets.enc -out secrets -d; fi
  - if [ -n "$encrypted_49e3b92debd1_key" ]; then tar xvf secrets >/dev/null; fi
  - if [ -z "$encrypted_49e3b92debd1_key" ]; then touch local.properties; fi

install:
  # List and delete unnecessary components to free space
  - sdkmanager --list || true
  - sdkmanager --uninstall "system-images;android-15;default;armeabi-v7a"
  - sdkmanager --uninstall "system-images;android-16;default;armeabi-v7a"
  - sdkmanager --uninstall "system-images;android-17;default;armeabi-v7a"
  - sdkmanager --uninstall "system-images;android-18;default;armeabi-v7a"
  - sdkmanager --uninstall "system-images;android-19;default;armeabi-v7a"
  - sdkmanager --uninstall "system-images;android-21;default;armeabi-v7a"
  - sdkmanager --uninstall "extras;google;google_play_services"
  - sdkmanager --uninstall "extras;android;support"
  - sdkmanager --uninstall "platforms;android-10"
  - sdkmanager --uninstall "platforms;android-15"
  - sdkmanager --uninstall "platforms;android-16"
  - sdkmanager --uninstall "platforms;android-17"
  - sdkmanager --uninstall "platforms;android-18"
  - sdkmanager --uninstall "platforms;android-19"
  - sdkmanager --uninstall "platforms;android-20"
  - sdkmanager --uninstall "platforms;android-21"
  - sdkmanager --uninstall "build-tools;21.1.2"
  # Update sdk tools to latest version and install/update components
  - echo yes | sdkmanager "tools"
  - echo yes | sdkmanager "platforms;android-25" # Latest platform required by SDK tools
  - echo yes | sdkmanager "platforms;android-${API}" # Android platform required by emulator
  - echo yes | sdkmanager "extras;android;m2repository"
  - echo yes | sdkmanager "extras;google;m2repository"
  - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2"
  - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2"
  - echo yes | sdkmanager "$EMULATOR" # Install emulator system image
  # Create and start emulator
  - echo no | avdmanager create avd -n acib -k "$EMULATOR" -f --abi "$ABI" --tag "$TAG" --device 'Nexus 4' --sdcard 128M
  - emulator -avd acib -engine classic -skin 768x1280 -no-window -camera-back none -camera-front none -selinux permissive -verbose -qemu -m 512 &
  # Start adbd, wait for device connected and show android serial to avoid heavy tasks in parallel
  - adb wait-for-device get-serialno
  # Show version and download Gradle Wrapper if it's not already cached
  - ./gradlew --version
  # Clean project and download missing dependencies and components
  - ./gradlew clean
  # Check components status
  - sdkmanager --list || true
  # Run all checks
  - ./gradlew check -PdisablePreDex

after_success:
  - if [ -n "$GITHUB_API_KEY" ]; then .buildscript/deploy_alpha.sh; fi

before_script:
  # Download the emulator support stuff
  - mkdir -p $HOME/.cache/ci-support
  - curl -L https://github.com/connectbot/ci-support/archive/master.zip -z $HOME/.cache/ci-support/master.zip -o $HOME/.cache/ci-support/master.zip
  - unzip -oq $HOME/.cache/ci-support/master.zip -d $HOME
  # Wait for emulator fully-booted and disable animations
  - android-wait-for-emulator
  - adb shell settings put global window_animation_scale 0 &
  - adb shell settings put global transition_animation_scale 0 &
  - adb shell settings put global animator_duration_scale 0 &
  - sleep 30
  - adb shell input keyevent 82 &
  - sleep 15
  # Install our ci-support stuff to make the emulator tests more reliable.
  - adb install -r $HOME/ci-support-master/apk/android_emulator_hacks.apk
  - adb shell pm grant no.finn.android_emulator_hacks android.permission.SET_ANIMATION_SCALE
  - adb shell am start -n no.finn.android_emulator_hacks/no.finn.android_emulator_hacks.HackActivity

script:
  - ./gradlew check assembleDebug assembleDebugAndroidTest connectedCheck -Dorg.gradle.jvmargs="-Xms512m -Xmx512m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false
  - .buildscript/firebase_tests.sh

after_script:
  # Show tests and lint results
  - cat ${TRAVIS_BUILD_DIR}/*/build/outputs/androidTest-results/connected/*
  - cat ${TRAVIS_BUILD_DIR}/app/build/reports/lint-results.xml
  - cat ${TRAVIS_BUILD_DIR}/wear/build/reports/lint-results.xml

branches:
  except:
    - gh-pages

before_cache:
  - rm -f ${TRAVIS_BUILD_DIR}/gradle/caches/modules-2/modules-2.lock # Avoid to repack it due locks
  - rm -f ${TRAVIS_BUILD_DIR}/gradle/caches/3.4/classAnalysis/classAnalysis.lock
  - rm -f ${TRAVIS_BUILD_DIR}/gradle/caches/3.4/jarSnapshots/jarSnapshots.lock

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/gradle/caches/
    - ${TRAVIS_BUILD_DIR}/gradle/wrapper/dists/
    - $HOME/.m2
    - $HOME/.gradle
    - $HOME/.cache/ci-support


notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/a9870bec6049c7309e68
    on_success: change
    on_failure: always
